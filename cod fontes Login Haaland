import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;


public class TelaUsuario extends javax.swing.JFrame {

   
    public TelaUsuario() {
        initComponents();
          btnExcluir.setVisible(false);
        btnSalvarAlteracao.setVisible(false);
    }
  public TelaUsuario(String usuario, String senha, String nome, String cargo,String operacao) {
        initComponents();
        txtUsuario.setText(usuario);
        txtSenha.setText(senha);
        txtNome.setText(nome);
        cmbCargo.setSelectedItem(cargo);
        if(operacao.equals("excluir")){
        btnSalvar.setVisible(false);
        btnSalvarAlteracao.setVisible(false);
        }else if(operacao.equals("Alterar")){
        btnSalvar.setVisible(false);
        btnExcluir.setVisible(false);
        txtUsuario.setEnabled(false);
        }
    } 

 
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        lblNome = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        txtUsuario = new javax.swing.JTextField();
        lblUsuario = new javax.swing.JLabel();
        lblSenha = new javax.swing.JLabel();
        txtSenha = new javax.swing.JTextField();
        cmbCargo = new javax.swing.JComboBox<>();
        lblCargo = new javax.swing.JLabel();
        btnSalvar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnSalvarAlteracao = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        getContentPane().setLayout(null);

        lblNome.setText("Nome");
        getContentPane().add(lblNome);
        lblNome.setBounds(10, 20, 90, 40);

        txtNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNomeKeyPressed(evt);
            }
        });
        getContentPane().add(txtNome);
        txtNome.setBounds(70, 20, 160, 40);

        txtUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsuarioActionPerformed(evt);
            }
        });
        txtUsuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtUsuarioKeyPressed(evt);
            }
        });
        getContentPane().add(txtUsuario);
        txtUsuario.setBounds(70, 70, 160, 40);

        lblUsuario.setText("Usuário");
        getContentPane().add(lblUsuario);
        lblUsuario.setBounds(10, 70, 90, 40);

        lblSenha.setText("Senha");
        getContentPane().add(lblSenha);
        lblSenha.setBounds(10, 120, 90, 40);

        txtSenha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSenhaActionPerformed(evt);
            }
        });
        txtSenha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSenhaKeyPressed(evt);
            }
        });
        getContentPane().add(txtSenha);
        txtSenha.setBounds(70, 120, 160, 40);

        cmbCargo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "Gerente", "Vendedor", "Farmacêutico", "Ver Todos" }));
        cmbCargo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCargoActionPerformed(evt);
            }
        });
        cmbCargo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmbCargoKeyPressed(evt);
            }
        });
        getContentPane().add(cmbCargo);
        cmbCargo.setBounds(70, 170, 160, 50);

        lblCargo.setText("Cargo");
        getContentPane().add(lblCargo);
        lblCargo.setBounds(10, 170, 90, 40);

        btnSalvar.setBackground(new java.awt.Color(204, 204, 204));
        btnSalvar.setForeground(new java.awt.Color(255, 255, 255));
        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });
        btnSalvar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnSalvarKeyPressed(evt);
            }
        });
        getContentPane().add(btnSalvar);
        btnSalvar.setBounds(10, 240, 140, 30);

        btnExcluir.setBackground(new java.awt.Color(204, 204, 204));
        btnExcluir.setForeground(new java.awt.Color(255, 255, 255));
        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });
        getContentPane().add(btnExcluir);
        btnExcluir.setBounds(80, 270, 140, 30);

        btnSalvarAlteracao.setBackground(new java.awt.Color(204, 204, 204));
        btnSalvarAlteracao.setForeground(new java.awt.Color(255, 255, 255));
        btnSalvarAlteracao.setText("Salvar Alteração");
        btnSalvarAlteracao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarAlteracaoActionPerformed(evt);
            }
        });
        getContentPane().add(btnSalvarAlteracao);
        btnSalvarAlteracao.setBounds(150, 240, 140, 30);
        getContentPane().add(jLabel1);
        jLabel1.setBounds(-60, 10, 360, 320);

        setSize(new java.awt.Dimension(319, 341));
        setLocationRelativeTo(null);
    }// </editor-fold>                        

    private void txtNomeKeyPressed(java.awt.event.KeyEvent evt) {                                   
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
            txtUsuario.requestFocus();
        }
    }                                  

    private void txtUsuarioActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    }                                          

    private void txtUsuarioKeyPressed(java.awt.event.KeyEvent evt) {                                      
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
            txtSenha.requestFocus();
        }
    }                                     

    private void txtSenhaActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    }                                        

    private void txtSenhaKeyPressed(java.awt.event.KeyEvent evt) {                                    
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
            cmbCargo.requestFocus();
        }
    }                                   

    private void cmbCargoActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    }                                        

    private void cmbCargoKeyPressed(java.awt.event.KeyEvent evt) {                                    
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
            btnSalvar.requestFocus();
        }
    }                                   

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {                                          
        //1 - Pegar as informações dos campos do formulário.
        String n, u, s, c;
        u = txtUsuario.getText();
        s = txtSenha.getText();
        n = txtNome.getText();
        c = cmbCargo.getSelectedItem().toString();
        //2 - Verificar se o campo txtUsuario do formulário, que é chave primária na tabela, não está vazio
        if (u.isEmpty()) { // se usuário está vazio
            JOptionPane.showMessageDialog(null, "É obrigatório digitar o usuário");
            txtUsuario.requestFocus();
            return; // stop
        }
        if (s.isEmpty()) { // se usuário está vazio
            JOptionPane.showMessageDialog(null, "É obrigatório digitar o usuário");
            txtUsuario.requestFocus();
            return; // stop
        }
        try {

            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection conectado = DriverManager.getConnection("jdbc:mysql://localhost:3306/haaland", "root", "admin");
            // 4- Inseriri os dados digitados na tabela do banco de dados
            PreparedStatement st = conectado.prepareStatement("INSERT INTO usuarios VALUES(?,?,?,?)");
            st.setString(1, u);
            st.setString(2, s);
            st.setString(3, n);
            st.setString(4, c);
            st.executeUpdate();
            //4.1
            JOptionPane.showMessageDialog(null, "Usuário cadastrado com sucesso");
            txtUsuario.setText("");
            txtNome.setText("");
            txtSenha.setText("");
            cmbCargo.setSelectedIndex(0);
            txtNome.requestFocus();

        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Driver não está na library");

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Você errou nos dados da conexão com o banco de dados");
        }
    }                                         

    private void btnSalvarKeyPressed(java.awt.event.KeyEvent evt) {                                     
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
            btnSalvar.doClick();
        }
    }                                    

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {                                           

        //1 - Perguntar se tem certeza que deseja excluir
        int resposta; // 0 - Sim; 1 - Não
        resposta = JOptionPane.showConfirmDialog(null, "Confirma?", "Confirmação", 0);
        //1.1 - Se a responta for sim
        if (resposta == 0) { //Resposta SIM
            //1.1.1 Obter o usuário no txtUsuario.
            String u = txtUsuario.getText();
            //1.1.2 - Conectar com o banco de dados.
            try {

                Class.forName("com.mysql.cj.jdbc.Driver");
                Connection conectado = DriverManager.getConnection("jdbc:mysql://localhost:3306/haaland", "root", "admin");
                //1.1.3 Excluir o usuario do banco de dados
                PreparedStatement st = conectado.prepareStatement("DELETE FROM usuarios WHERE usuario = ?");
                st.setString(1, u);
                st.executeUpdate(); //INSERT, UPDATE, DELETE
                //1.1.4 Mostrar a mensagem "Usuário excluído com sucesso" e limpar os campos.
                JOptionPane.showMessageDialog(null, "Usuário excluído com sucesso");
                //1.1.5 Fecha a TelaUsuario
                dispose();
                //1.1.6 Desconectar do banco de dados
                conectado.close();
            } catch (ClassNotFoundException | SQLException ex) {
                JOptionPane.showMessageDialog(null, "Mensagem de erro:" + ex.getMessage());
            }
            //1.2 - Se a resposta for não
            //1.2.2 Fecha a TelaUsuario
        } else {
            dispose();
        }
    }                                          

    private void btnSalvarAlteracaoActionPerformed(java.awt.event.ActionEvent evt) {                                                   
        //1 - Pegar as informações dos campos do formulário.
        String n, u, s, c;
        u = txtUsuario.getText();
        s = txtSenha.getText();
        n = txtNome.getText();
        c = cmbCargo.getSelectedItem().toString();
        //2 - Verificar se o campo txtUsuario do formulário, que é chave primária na tabela, não está vazio
        if (u.isEmpty()) { // se usuário está vazio
            JOptionPane.showMessageDialog(null, "É obrigatório digitar o usuário");
            txtUsuario.requestFocus();
            return; // stop
        }
        if (s.isEmpty()) { // se usuário está vazio
            JOptionPane.showMessageDialog(null, "É obrigatório digitar o usuário");
            txtUsuario.requestFocus();
            return; // stop
        }
        try {

            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection conectado = DriverManager.getConnection("jdbc:mysql://localhost:3306/haaland", "root", "admin");
            // 4- Inseriri os dados digitados na tabela do banco de dados
            PreparedStatement st = conectado.prepareStatement("UPDATE usuarios SET senha = ?, nome = ?, cargo = ? WHERE usuario = ?");
            st.setString(1, s);
            st.setString(2, n);
            st.setString(3, c);
            st.setString(4, u);
            st.executeUpdate();
            //4.1
            JOptionPane.showMessageDialog(null, "Usuário Alterado com sucesso");
            conectado.close();
            dispose();

        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Driver não está na library");

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }                                                  

  
    // Variables declaration - do not modify                     
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JButton btnSalvarAlteracao;
    private javax.swing.JComboBox<String> cmbCargo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblCargo;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblSenha;
    private javax.swing.JLabel lblUsuario;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtSenha;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration                   
}
